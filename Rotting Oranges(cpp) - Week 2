class Solution {
public:

    
    int orangesRotting(vector<vector<int>>& grid) {
       
        bool flag=true;    
    int i,j,cnt=0;         
    
    for(i=0;i<grid.size();i++)              
    {
        for(j=0;j<grid[i].size();j++)
        {
            if(grid[i][j]==1)
                break;
        }
        if(j<grid[i].size())
            break;
    }
    if(i==grid.size())       
        return 0;
    vector<vector<int>>v;    
    for(i=0;i<grid.size();i++)            
    {
        vector<int>v1;
        for(j=0;j<grid[i].size();j++)
        {
             v1.push_back(0);
        }
        v.push_back(v1);
    }
    while(1){
                bool flag1=false;         
    for(i=0;i<grid.size();i++)
    {
        for(j=0;j<grid[i].size();j++)
        {
            if(v[i][j]==0)               
                v[i][j]=grid[i][j];
            if(grid[i][j]==2)        
            { 
                flag=false;          
                if(i-1>=0&&grid[i-1][j]==1)
                    v[i-1][j]=2,flag1=true;       
                if(i+1<grid.size()&&grid[i+1][j]==1)
                    v[i+1][j]=2,flag1=true;
                if(j-1>=0&&grid[i][j-1]==1)
                    v[i][j-1]=2,flag1=true;
                if(j+1<grid[i].size()&&grid[i][j+1]==1)
                    v[i][j+1]=2,flag1=true;
            
            }
        }
        
    }
	            if(flag)    
            return -1;
    for(i=0;i<grid.size();i++)     
    {
        for(j=0;j<grid[i].size();j++)
        {
             grid[i][j]=v[i][j];
        }
    }
           if(flag1)             
                    cnt++;

    for(i=0;i<grid.size();i++)
    {
        for(j=0;j<grid[i].size();j++)
        {
            if(grid[i][j]==1)
                break;
        }
        if(j<grid[i].size())
            break;
    }
    if(i==grid.size())                  
        return cnt;
    else if(!flag1)                    
        return -1;
    }
    }
};
